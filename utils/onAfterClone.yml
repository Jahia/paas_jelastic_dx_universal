---
type: update
version: 1.5.2
name: Jahia - after clone
logo: /images/jahia-logo-70x70.png
id: jahia-dx-cluster-universal-after-clone
description:
  short: Jahia - after clone

globals:
  PATH: "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master"
  DB_USER: "${settings.db_user}"
  DB_PASS: "${settings.db_pass}"
  CLUSTER_NAME: galera-cluster
  GALERA_CONF: "/etc/mysql/conf.d/galera.cnf"
  CUSTOM_CONF: "${settings.custom_conf}"


onInstall:
  - log: Start post-clone setup
  - api [*]: env.control.AddContainerEnvVars
    vars: {"envName": "${env.shortdomain}"}

  - resetCluster: sqldb
  - initialSetup:
      id: "sqldb"
  - setupSeeds
  - setupInstance:
      id: "sqldb"
  - cmd[${nodes.sqldb.master.id}]: "/etc/init.d/mysql stop; sleep 5; galera_new_cluster; service httpd restart"
    user: root
  - forEach(n:nodes.sqldb):
      if (!${@n.ismaster}):
        cmd[${@n.id}]: "jem service restart"

  - resetHaproxyBackends: bl
  # - if (nodes.sqldb.length > 1):
  #     - repairReplication:
  #         nodeId: ${nodes.sqldb.first.id}
  #         masterId: ${nodes.sqldb.last.id}
  #     - repairReplication:
  #         nodeId: ${nodes.sqldb.last.id}
  #         masterId: ${nodes.sqldb.first.id}
  #     - cmd[proxy]: /root/clone-updates.sh ${nodes.sqldb.first.id} ${nodes.sqldb.last.id}
  #       user: root
  # - else:
  #     - cmd[proxy]: /root/clone-updates.sh ${nodes.sqldb.first.id}
  #       user: root
  - cmd[proc, cp]: |-
      touch $DATA_PATH/digital-factory-data/safe-env-clone
      chown tomcat:tomcat $DATA_PATH/digital-factory-data/safe-env-clone
      rm -f /data/digital-factory-data/karaf/etc/org.jahia.modules.marketingfactory.settings-mf.cfg
  - environment.control.ApplyNodeGroupData [proc, cp]:
      data:
        envLink: ""

actions:
  initialSetup:
    - setupUser:
        id: "${this.id}"
    - setNodeDisplayName[${this.id}]: Galera
      if (!/settings.custom_conf/.test("${globals.CUSTOM_CONF}")):
        cmd[${this.id}]: cd /etc/mysql/conf.d && wget ${globals.CUSTOM_CONF} &>> /var/log/run.log
        user: root
    - cmd[${this.id}]: |-
        wget ${globals.PATH}/scripts/mysql -O /etc/init.d/mysql
        wget ${globals.PATH}/configs/galera.cnf -O ${globals.GALERA_CONF} &>> /var/log/run.log
      user: root
        
  setupUser:
    cmd[${this.id}]: |-
      wget ${globals.PATH}/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log
      bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log
    user: root

  setupSeeds:
    script:
    - var resp = jelastic.env.control.GetEnvInfo('${env.envName}', session);
    - if (resp.result != 0) return resp;
    - var nodes = [];
    - for (var i = 0, n = resp.nodes; i < n.length; i++)
    - "  n[i].nodeGroup == nodeGroup ? nodes.push('node' + n[i].id) : 0"
    - 'resp = {result:0, onAfterReturn: {}};'
    - resp.onAfterReturn['cmd['+ nodeGroup +']'] = 'sed -i "s|wsrep_cluster_address.*|wsrep_cluster_address
      = gcomm://'+ nodes.join(',') +'|g " ${globals.GALERA_CONF}';
    - resp.onAfterReturn['user'] = 'root';
    - return resp;
    nodeGroup: sqldb
  
  setupInstance:
    cmd[${this.id}]: |-
      sed -i "s/server_id.*/server_id = $(echo '${env.region}' | md5sum | grep -Eo "[[:digit:]]{3}"  | head -n1)/" ${globals.GALERA_CONF}
      sed -i "s/bind-address.*/bind-address = node${this.id}/" ${globals.GALERA_CONF}
      sed -i "s/report_host.*/report_host = node${this.id}/" ${globals.GALERA_CONF}
      sed -i "s/wsrep_cluster_name.*/wsrep_cluster_name = ${globals.CLUSTER_NAME}/" ${globals.GALERA_CONF}
      sed -i "s/wsrep_node_name.*/wsrep_node_name = node${this.id}/" ${globals.GALERA_CONF}
    
  resetCluster:
    - cmd[sqldb]: |-
        [ -f ${globals.GALERA_CONF} ] && rm -f ${globals.GALERA_CONF}
        [ -f /var/lib/mysql/grastate.dat ] && rm -f /var/lib/mysql/grastate.dat
        [ -f /var/lib/mysql/gvwstate.dat ] && rm -f /var/lib/mysql/gvwstate.dat
        [ -f /var/lib/mysql/galera.cache ] && rm -f /var/lib/mysql/galera.cache
        /etc/init.d/mysql stop; pkill -9 mysql; /etc/init.d/mysql start
      user: root


  resetHaproxyBackends:
    - cmd[bl]: |-
        sed -ie "/$server.*:80 check cookie/d" /etc/haproxy/haproxy.cfg.d/10-jahia.cfg
    - forEach(nodes.cp):
        cmd[${this}]: |-
          echo "    server ${env.appid}-${@i.id} ${@i.intIP}:80 check cookie s${@i.id}" >> /etc/haproxy/haproxy.cfg.d/10-jahia.cfg
          sudo service haproxy reload
        user: haproxy
