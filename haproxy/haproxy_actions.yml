---
actions:
  installHaproxy:
    - setSudoer: bl
    - splitHaproxyConf: bl
    - updateHaproxyConf
    - environment.control.ApplyNodeGroupData [bl]:
        data:
          productName: haproxy
          productVersion: ${nodes.bl.first.version}
    - env.control.AddContainerEnvVars[bl]:
      vars: {"auth_basic_enabled": "false"}

  splitHaproxyConf:
    # "Hack" to split the haproxy conf file and isolate jahia backend conf
    - cmd[${this}]: |-
        wget -O /etc/haproxy/502.http ${baseUrl}/configs/502.http
        mkdir /etc/haproxy/haproxy.cfg.d && chmod 775 /etc/haproxy/haproxy.cfg.d
        wget -O /etc/haproxy/haproxy.cfg.d/00-global.cfg ${baseUrl}/configs/haproxy-00-global.cfg
        wget -O /etc/haproxy/haproxy.cfg.d/10-jahia.cfg ${baseUrl}/configs/haproxy-10-jahia.cfg
        # We empty the file instead of deleting it because of Jelastic trying to update it
        # when scaling
        echo "### WARNING : this config file is not used for haproxy configuration" > /etc/haproxy/haproxy.cfg
        sed -i "s|cfgfile=.*|cfgfile=/etc/haproxy/haproxy.cfg.d|g" /etc/init.d/haproxy
        chown -R haproxy:haproxy /etc/haproxy
        systemctl daemon-reload
        service haproxy restart
      user: root

  updateHaproxyConf:
    - cmd[bl]: |-
        # Various configuration changes
        stats_pwd="${globals.haproxy_admin_stats_pass}"
        sed -i "s/admin-stat-password/$stats_pwd/g" /etc/haproxy/haproxy.cfg.d/00-global.cfg
      user: haproxy
    - resetHaproxyBackends

  removeNodeFromHaproxy:
    - log: "going to del ${this.nodeId}"
    - cmd[bl]: |-
        grep -q "${env.appid}-${this.nodeId}" /etc/haproxy/haproxy.cfg.d/10-jahia.cfg
        if [ $? ]; then sed -i "/${env.appid}-${this.nodeId}/d" /etc/haproxy/haproxy.cfg.d/10-jahia.cfg; fi
        sudo service haproxy reload
      user: haproxy

  addNodeToHaproxy:
    - cmd[bl]: |-
        echo "    server ${env.appid}-${this.nodeId} ${this.nodeIp}:80 check cookie s${this.nodeId}" >> /etc/haproxy/haproxy.cfg.d/10-jahia.cfg
        sudo service haproxy reload
      user: haproxy

  resetHaproxyBackends:
    - cmd[bl]: |-
        sed -i -e "/$server.*:80 check cookie/d" /etc/haproxy/haproxy.cfg.d/10-jahia.cfg
    - forEach(nodes.cp):
        cmd[bl]: |-
          echo "    server ${env.appid}-${@i.id} ${@i.intIP}:80 check cookie s${@i.id}" >> /etc/haproxy/haproxy.cfg.d/10-jahia.cfg
    - cmd[bl]: |-
        sudo service haproxy reload
      user: haproxy

  setupDatadogAgentHaproxy:
    - log: "## Finalize Datadog agent setup on ${this}"
    - cmd [bl]: |-
        DD_API_KEY=${globals.datadog_key} bash -c "$(curl -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)"
        NODE_NAME=${HOSTNAME/-*}
        echo "hostname: $(echo $_ROLE| sed 's/_//g').${NODE_NAME#node}" >> /etc/datadog-agent/datadog.yaml
        sed -i 's/# logs_enabled: false/logs_enabled: true/' /etc/datadog-agent/datadog.yaml
        echo "tags:" >> /etc/datadog-agent/datadog.yaml
        echo " - env:${PACKAGE_TYPE}" >> /etc/datadog-agent/datadog.yaml
        echo " - product:jahia" >> /etc/datadog-agent/datadog.yaml
        echo " - version:${DX_VERSION}" >> /etc/datadog-agent/datadog.yaml
        echo " - envname:${env.envName}" >> /etc/datadog-agent/datadog.yaml
        echo " - provide:${_PROVIDE}" >> /etc/datadog-agent/datadog.yaml
        echo " - role:${_ROLE}" >> /etc/datadog-agent/datadog.yaml
        echo " - envmode:${jahia_cfg_operatingMode}" >> /etc/datadog-agent/datadog.yaml
        wget -O /etc/datadog-agent/conf.d/haproxy.d/conf.yaml ${baseUrl}/configs/dd_agent_haproxy_conf.yml
        sed -i 's/my_awesome_password/${globals.haproxy_admin_stats_pass}/g' /etc/datadog-agent/conf.d/haproxy.d/conf.yaml
        wget -O /etc/datadog-agent/conf.d/process.d/conf.yaml ${baseUrl}/configs/dd_agent_process_conf.yml
        wget -O /usr/local/bin/set_dd_tags.sh ${baseUrl}/scripts/set_dd_tags.sh
        wget -O /etc/cron.d/set_dd_tags_cron ${baseUrl}/configs/set_dd_tags_cron
        chmod u+x /usr/local/bin/set_dd_tags.sh
        wget -O /etc/rsyslog.d/haproxy.conf ${baseUrl}/configs/rsyslog_haproxy
        chown root:dd-agent /var/log/haproxy/* && chmod 640 /var/log/haproxy/*
        systemctl restart rsyslog crond datadog-agent
      user: root
